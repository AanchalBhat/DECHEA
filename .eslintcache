[{"C:\\Users\\admin\\Downloads\\push\\src\\index.js":"1","C:\\Users\\admin\\Downloads\\push\\src\\App.js":"2","C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\Employes.js":"3","C:\\Users\\admin\\Downloads\\push\\src\\components\\datepicker\\datepicker.js":"4","C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\searchEmp.js":"5","C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\allEmp.js":"6"},{"size":246,"mtime":1607325416000,"results":"7","hashOfConfig":"8"},{"size":1395,"mtime":1607408021663,"results":"9","hashOfConfig":"8"},{"size":6575,"mtime":1607432558650,"results":"10","hashOfConfig":"8"},{"size":3965,"mtime":1607433129683,"results":"11","hashOfConfig":"8"},{"size":910,"mtime":1607402481039,"results":"12","hashOfConfig":"8"},{"size":1322,"mtime":1607427434821,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"x6a7ye",{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},"C:\\Users\\admin\\Downloads\\push\\src\\index.js",[],"C:\\Users\\admin\\Downloads\\push\\src\\App.js",[],["30","31"],"C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\Employes.js",["32","33","34","35","36"],"C:\\Users\\admin\\Downloads\\push\\src\\components\\datepicker\\datepicker.js",["37"],"import React,{useEffect,useRef} from 'react'\r\nimport InfiniteCalendar from 'react-infinite-calendar'\r\nimport 'react-infinite-calendar/styles.css'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport { AiOutlineCalendar } from 'react-icons/ai'\r\nimport { TiArrowUnsorted } from 'react-icons/ti'\r\nimport './datestyle.css'\r\nexport const Date2 = () => {\r\n\r\n    const [clicked, setClicked] = React.useState(false)\r\n    const [today, setToday] = React.useState(new Date())\r\n    const useOutsideAlerter = (ref) => {\r\n        useEffect(() => {\r\n          const handleClickOutside = (event) => {\r\n            if (ref.current && !ref.current.contains(event.target)) {\r\n              setClicked(false);\r\n            }\r\n          };\r\n    \r\n          // Bind the event listener\r\n          document.addEventListener(\"mousedown\", handleClickOutside);\r\n          return () => {\r\n            // Unbind the event listener on clean up\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n          };\r\n        }, [ref]);\r\n      };\r\n    \r\n      const wrapperRef = useRef(null);\r\n      useOutsideAlerter(wrapperRef);\r\n    \r\n      var lastWeek = new Date(\r\n        today.getFullYear(),\r\n        today.getMonth(),\r\n        today.getDate() - 7\r\n      );\r\n      const [dt, setDate] = React.useState(\"\");\r\n      const handleDate = (e) => {\r\n        setDate(e.toLocaleDateString('en-ZA'));\r\n        setClicked(!clicked);\r\n        console.log(\"dt\", dt);\r\n      };\r\n    \r\n      return (\r\n        <>\r\n          <Container ref={wrapperRef}>\r\n                <div className='dropDown' onClick={() => setClicked(!clicked)}>\r\n                    <Container>\r\n                        <Row>\r\n                            <Col className=\"mt-1\" xs={1}>\r\n                                <AiOutlineCalendar />\r\n                            </Col>\r\n                            <Col className=\"text-left \">{\r\n                                dt ? <p style={{ paddingTop: '10px' }}>{dt}</p> : <p style={{ paddingTop: '10px' }}>Pick Date</p>\r\n                            }\r\n\r\n                            </Col>\r\n                            <Col style={{ paddingTop: \"10px\", marginRight: \"10px\" }} xs={1}>\r\n                                <TiArrowUnsorted />\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n                </div>\r\n                <div >\r\n                    {clicked ? (\r\n                        <div className=\"dateContainer\">\r\n                            <InfiniteCalendar\r\n                                width={400}\r\n                                height={400}\r\n                                selected={today}\r\n                                onSelect={e => handleDate(e)}\r\n                                minDate={lastWeek}\r\n                                max={new Date(2021, 11, 31)}\r\n\r\n                                theme={{\r\n                                    floatingNav: {\r\n                                        background: '#1c3663',\r\n                                        chevron: '#FFA726',\r\n                                        color: '#1c3663',\r\n                                    },\r\n                                    textColor: {\r\n                                        active: '#FFF',\r\n                                        default: '#FFF',\r\n                                    },\r\n                                    todayColor: '#FFA726',\r\n                                    weekdayColor: '#1c3663',\r\n                                }}\r\n\r\n                                displayOptions={{\r\n                                    showHeader: false,\r\n                                    showOverlay: false,\r\n                                    overscanMonthCount: 2\r\n\r\n\r\n                                }}\r\n                            /></div>\r\n                    ) : null}\r\n                </div>\r\n            </Container>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Date2\r\n","C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\searchEmp.js",["38"],"import React from 'react'\r\nimport { GoSearch } from 'react-icons/go'\r\nimport { Container, Row, Col, Image } from 'react-bootstrap'\r\nconst SearchEmp = (props) => {\r\n\r\n    return (\r\n        <Row>\r\n            <Col xs={1} style={{ paddingTop: '5%' }}>\r\n                <GoSearch />\r\n            </Col>\r\n            <Col>\r\n                <input\r\n                    className='dropDownSearch mt-0.5 mb-0.5 m-2'\r\n                    type='text'\r\n                    placeholder='Search Employee....'\r\n                    value={props.search}\r\n                    onChange={e => props.setSearch(e.target.value)}\r\n                />\r\n            </Col>\r\n            {props.search.length > 0 ? (\r\n                <>\r\n                    <Container className>{props.searchResult()}</Container>\r\n                    <hr />\r\n                </>\r\n            ) : null}\r\n        </Row>\r\n    )\r\n}\r\nexport default SearchEmp ","C:\\Users\\admin\\Downloads\\push\\src\\components\\Employes\\allEmp.js",["39"],"import React from \"react\";\r\nimport { Row, Col, Image } from \"react-bootstrap\";\r\n\r\nconst AllEmp = (props) => {\r\n    const { index, person, selectEmploye, checkedVal } = props;\r\n\r\n    const [checked, setChecked] = React.useState(person.selected);\r\n    React.useEffect(() => {\r\n        setChecked(person.selected);\r\n    }, [checkedVal]);\r\n\r\n    const changeHandler = () => {\r\n        selectEmploye(person.id);\r\n\r\n        setChecked(!checked);\r\n    };\r\n\r\n    return (\r\n        <Row key={JSON.stringify(index)} className=\"empRow\">\r\n            <Col xs={2} className=\"mb-3 pr-0\">\r\n                <Image\r\n                    style={{ height: \"24px\", width: \"24px\" }}\r\n                    src={person.img}\r\n                    roundedCircle\r\n                    fluid\r\n                />\r\n            </Col>\r\n            <Col xs={8} className=\"text-left empName\">\r\n                {person.name}\r\n            </Col>\r\n            <Col xs={2}>\r\n                <div className=\"cont\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={() => changeHandler()}\r\n                        checked={checked}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                </div>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\nexport default AllEmp;\r\n",{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":35,"column":6,"nodeType":"46","endLine":35,"endColumn":8,"suggestions":"47"},{"ruleId":"44","severity":1,"message":"48","line":39,"column":6,"nodeType":"46","endLine":39,"endColumn":16,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"50","line":47,"column":6,"nodeType":"46","endLine":47,"endColumn":24,"suggestions":"51"},{"ruleId":"52","severity":1,"message":"53","line":96,"column":29,"nodeType":"54","messageId":"55","endLine":96,"endColumn":31},{"ruleId":"52","severity":1,"message":"53","line":108,"column":29,"nodeType":"54","messageId":"55","endLine":108,"endColumn":31},{"ruleId":"56","severity":1,"message":"57","line":11,"column":19,"nodeType":"58","messageId":"59","endLine":11,"endColumn":27},{"ruleId":"56","severity":1,"message":"60","line":3,"column":31,"nodeType":"58","messageId":"59","endLine":3,"endColumn":36},{"ruleId":"44","severity":1,"message":"61","line":10,"column":8,"nodeType":"46","endLine":10,"endColumn":20,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'props.data' and 'selectedEmp'. Either include them or remove the dependency array. If 'setEmployes' needs the current value of 'props.data', you can also switch to useReducer instead of useState and read 'props.data' in the reducer.","ArrayExpression",["65"],"React Hook React.useEffect has a missing dependency: 'selectedEmp'. Either include it or remove the dependency array.",["66"],"React Hook React.useEffect has a missing dependency: 'employes.length'. Either include it or remove the dependency array.",["67"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'setToday' is assigned a value but never used.","Identifier","unusedVar","'Image' is defined but never used.","React Hook React.useEffect has a missing dependency: 'person.selected'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},{"desc":"75","fix":"76"},"Update the dependencies array to be: [props.data, selectedEmp]",{"range":"77","text":"78"},"Update the dependencies array to be: [employes, selectedEmp]",{"range":"79","text":"80"},"Update the dependencies array to be: [employes.length, selectedEmployes]",{"range":"81","text":"82"},"Update the dependencies array to be: [checkedVal, person.selected]",{"range":"83","text":"84"},[1203,1205],"[props.data, selectedEmp]",[1263,1273],"[employes, selectedEmp]",[1453,1471],"[employes.length, selectedEmployes]",[320,332],"[checkedVal, person.selected]"]